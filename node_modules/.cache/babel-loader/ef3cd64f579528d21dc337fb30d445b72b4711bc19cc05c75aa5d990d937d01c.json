{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamchaudhary/Desktop/TaskMan/sharpner/src/Slideshow.js\";\nimport React, { Component } from 'react';\nimport './Slideshow.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Slideshow extends Component {\n  constructor() {\n    super();\n    this.startSlideshow = () => {\n      this.slideshowInterval = setInterval(() => {\n        this.nextSlide();\n      }, 5000); // Change slide every 5 seconds (adjust as needed)\n    };\n    this.stopSlideshow = () => {\n      clearInterval(this.slideshowInterval);\n    };\n    this.nextSlide = () => {\n      const {\n        currentSlide,\n        slides\n      } = this.state;\n      this.setState({\n        currentSlide: (currentSlide + 1) % slides.length\n      });\n    };\n    this.state = {\n      currentSlide: 0,\n      slides: [{\n        imageUrl: 'image1.jpg',\n        title: 'Slide 1',\n        text: 'This is the first slide.',\n        link: 'https://example.com'\n      }, {\n        imageUrl: 'image2.jpg',\n        title: 'Slide 2',\n        text: 'This is the second slide.',\n        link: 'https://example.com'\n      }\n      // Add more slides as needed\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.startSlideshow();\n  }\n  componentWillUnmount() {\n    this.stopSlideshow();\n  }\n  render() {\n    const {\n      currentSlide,\n      slides\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow-container\",\n        children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slide ${index === currentSlide ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: slide.imageUrl,\n            alt: slide.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: slide.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: slide.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: slide.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Learn More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default Slideshow;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","Slideshow","constructor","startSlideshow","slideshowInterval","setInterval","nextSlide","stopSlideshow","clearInterval","currentSlide","slides","state","setState","length","imageUrl","title","text","link","componentDidMount","componentWillUnmount","render","children","className","map","slide","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel"],"sources":["/Users/shubhamchaudhary/Desktop/TaskMan/sharpner/src/Slideshow.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './Slideshow.css'; // Import your CSS file\n\nclass Slideshow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentSlide: 0,\n      slides: [\n        {\n          imageUrl: 'image1.jpg',\n          title: 'Slide 1',\n          text: 'This is the first slide.',\n          link: 'https://example.com',\n        },\n        {\n          imageUrl: 'image2.jpg',\n          title: 'Slide 2',\n          text: 'This is the second slide.',\n          link: 'https://example.com',\n        },\n        // Add more slides as needed\n      ],\n    };\n  }\n\n  componentDidMount() {\n    this.startSlideshow();\n  }\n\n  componentWillUnmount() {\n    this.stopSlideshow();\n  }\n\n  startSlideshow = () => {\n    this.slideshowInterval = setInterval(() => {\n      this.nextSlide();\n    }, 5000); // Change slide every 5 seconds (adjust as needed)\n  }\n\n  stopSlideshow = () => {\n    clearInterval(this.slideshowInterval);\n  }\n\n  nextSlide = () => {\n    const { currentSlide, slides } = this.state;\n    this.setState({ currentSlide: (currentSlide + 1) % slides.length });\n  }\n\n  render() {\n    const { currentSlide, slides } = this.state;\n\n    return (\n      <>\n      <div className=\"slideshow-container\">\n        {slides.map((slide, index) => (\n          <div key={index} className={`slide ${index === currentSlide ? 'active' : ''}`}>\n            <img src={slide.imageUrl} alt={slide.title} />\n            <div className=\"slide-text\">\n              <h2>{slide.title}</h2>\n              <p>{slide.text}</p>\n              <a href={slide.link} target=\"_blank\" rel=\"noopener noreferrer\">Learn More</a>\n            </div>\n          </div>\n        ))}\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Slideshow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}